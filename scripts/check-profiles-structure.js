const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Variables d\'environnement manquantes');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function checkProfilesStructure() {
  console.log('üîç V√©rification de la structure de la table profiles');
  console.log('='.repeat(50));

  try {
    // R√©cup√©rer un √©chantillon de donn√©es pour voir la structure
    const { data: sample, error: sampleError } = await supabase
      .from('profiles')
      .select('*')
      .limit(1);

    if (sampleError) {
      console.error('‚ùå Erreur √©chantillon:', sampleError);
      return;
    }

    if (sample && sample.length > 0) {
      console.log('‚úÖ Structure de la table profiles:');
      console.log('Colonnes disponibles:', Object.keys(sample[0]));
      console.log('\nExemple de donn√©es:');
      console.log(JSON.stringify(sample[0], null, 2));
    } else {
      console.log('‚ö†Ô∏è Aucune donn√©e dans la table profiles');
    }

    // V√©rifier l'agent sp√©cifique
    console.log('\nüîç V√©rification de l\'agent b00a283f-0a46-41d2-af95-8a256c9c2771:');
    const { data: agent, error: agentError } = await supabase
      .from('profiles')
      .select('*')
      .eq('user_id', 'b00a283f-0a46-41d2-af95-8a256c9c2771')
      .single();

    if (agentError) {
      console.error('‚ùå Erreur agent:', agentError);
    } else {
      console.log('‚úÖ Agent trouv√©:', agent);
    }

  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error);
  }
}

checkProfilesStructure();